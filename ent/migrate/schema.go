// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GuildsColumns holds the columns for the "guilds" table.
	GuildsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "locale", Type: field.TypeString, Default: "ja"},
		{Name: "user_own_guilds", Type: field.TypeUint64},
	}
	// GuildsTable holds the schema information for the "guilds" table.
	GuildsTable = &schema.Table{
		Name:       "guilds",
		Columns:    GuildsColumns,
		PrimaryKey: []*schema.Column{GuildsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "guilds_users_own_guilds",
				Columns:    []*schema.Column{GuildsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MembersColumns holds the columns for the "members" table.
	MembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeUint64},
		{Name: "permission", Type: field.TypeJSON, Nullable: true},
	}
	// MembersTable holds the schema information for the "members" table.
	MembersTable = &schema.Table{
		Name:       "members",
		Columns:    MembersColumns,
		PrimaryKey: []*schema.Column{MembersColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "locale", Type: field.TypeString, Default: "ja"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// WordSuffixesColumns holds the columns for the "word_suffixes" table.
	WordSuffixesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "suffix", Type: field.TypeString, Size: 120},
		{Name: "expired", Type: field.TypeTime, Nullable: true},
		{Name: "rule", Type: field.TypeEnum, Enums: []string{"webhook", "warn", "delete"}, Default: "webhook"},
		{Name: "user_word_suffix", Type: field.TypeUint64},
		{Name: "guild_id", Type: field.TypeUint64, Nullable: true},
	}
	// WordSuffixesTable holds the schema information for the "word_suffixes" table.
	WordSuffixesTable = &schema.Table{
		Name:       "word_suffixes",
		Columns:    WordSuffixesColumns,
		PrimaryKey: []*schema.Column{WordSuffixesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "word_suffixes_users_word_suffix",
				Columns:    []*schema.Column{WordSuffixesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "word_suffixes_guilds_guild",
				Columns:    []*schema.Column{WordSuffixesColumns[5]},
				RefColumns: []*schema.Column{GuildsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GuildMembersColumns holds the columns for the "guild_members" table.
	GuildMembersColumns = []*schema.Column{
		{Name: "guild_id", Type: field.TypeUint64},
		{Name: "member_id", Type: field.TypeInt},
	}
	// GuildMembersTable holds the schema information for the "guild_members" table.
	GuildMembersTable = &schema.Table{
		Name:       "guild_members",
		Columns:    GuildMembersColumns,
		PrimaryKey: []*schema.Column{GuildMembersColumns[0], GuildMembersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "guild_members_guild_id",
				Columns:    []*schema.Column{GuildMembersColumns[0]},
				RefColumns: []*schema.Column{GuildsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "guild_members_member_id",
				Columns:    []*schema.Column{GuildMembersColumns[1]},
				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MemberOwnerColumns holds the columns for the "member_owner" table.
	MemberOwnerColumns = []*schema.Column{
		{Name: "member_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeUint64},
	}
	// MemberOwnerTable holds the schema information for the "member_owner" table.
	MemberOwnerTable = &schema.Table{
		Name:       "member_owner",
		Columns:    MemberOwnerColumns,
		PrimaryKey: []*schema.Column{MemberOwnerColumns[0], MemberOwnerColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "member_owner_member_id",
				Columns:    []*schema.Column{MemberOwnerColumns[0]},
				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "member_owner_user_id",
				Columns:    []*schema.Column{MemberOwnerColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GuildsTable,
		MembersTable,
		UsersTable,
		WordSuffixesTable,
		GuildMembersTable,
		MemberOwnerTable,
	}
)

func init() {
	GuildsTable.ForeignKeys[0].RefTable = UsersTable
	WordSuffixesTable.ForeignKeys[0].RefTable = UsersTable
	WordSuffixesTable.ForeignKeys[1].RefTable = GuildsTable
	GuildMembersTable.ForeignKeys[0].RefTable = GuildsTable
	GuildMembersTable.ForeignKeys[1].RefTable = MembersTable
	MemberOwnerTable.ForeignKeys[0].RefTable = MembersTable
	MemberOwnerTable.ForeignKeys[1].RefTable = UsersTable
}
